// const MongoClient = require('mongodb').MongoClient;
const {MongoClient, ObjectID} = require('mongodb');
// destructuring syntax for multiple object items

// // this will generate a new ObjectID without necessarily needing to be attached to an object
// let obj = new ObjectID();
// console.log(obj);

// **npm install mongodb@2.2.5 --save**
// let user = {name: 'alex', age: 25};
// let {name} = user;
// // Object destructuring syntax above pulls the property of the object it is set equal to, and can be used as below
// console.log(name);


MongoClient.connect('mongodb://localhost:27017/TodoApp', (err, db) => {
  if(err) {
    return console.log('Unable to connect to MongoDB server')
  }
  console.log('Connected to MongoDB server');

  // db.collection('Todos').insertOne({
  //   // 'db.collection' takes one argument: name of collection you want to insert into.
  //   // '.insertOne({object: 'for inserting'}, callback(err, result))'
  //   text: 'Something to do',
  //   completed: false
  // }, (err, result) => {
  //   if(err) {
  //     return console.log('Unable to insert todo', err)
  //   }
  //   console.log(JSON.stringify(result.ops, undefined, 2));
  //   // ops attribute stores all docs inserted
  // });

  // db.collection('Users').insertOne({
  //   name: 'Alex',
  //   age: 25,
  //   location: 'Thailand'
  //   // _id is automatically generated by Mongo, but you can give it its own ID if you want (as in case of 123 above)
  // }, (err, result) => {
  //   if(err) {
  //     return console.log('Unable to insert user', err)
  //   }
  //   // console.log(JSON.stringify(result.ops[0]._id.getTimestamp(), undefined, 2));
  //   console.log(result.ops[0]._id.getTimestamp());
  //   // ops attribute stores all docs inserted
  //   // '_id' property has numerous methods to pull important data
  // });
  db.close();
  // 'db.close()' closes connection
});
// MongoClient is needed to connect to DB. 2 arguments: (stringWhereDBLives, callback)
// // error is for error, db is command used to read and write data
// test is default DB given by MongoDB, but can create any database name
